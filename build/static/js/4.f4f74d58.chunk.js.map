{"version":3,"sources":["components/Planet.js"],"names":["Planet","props","state","initialId","planet","isLoading","type","this","setState","setTimeout","a","loadPlanet","response","data","handleNext","planetCard","className","class","id","name","climate","gravity","terrain","onClick","bind","React","Component","defaultProps"],"mappings":"2NAMMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,EACXC,OAAQ,GACRC,WAAW,EACXC,KAAM,UANS,E,8CAUnB,WAAc,IAAD,OACXC,KAAKC,UAAS,cAAGN,MAAH,MAAgB,CAC5BG,WAAW,MAGbI,WAAU,sBAAC,4BAAAC,EAAA,sEACYC,YAAW,EAAKT,MAAMC,WADlC,OACLS,EADK,OAET,EAAKJ,UAAS,SAAAN,GAAK,MAAK,CACtBE,OAAQQ,EAASC,KACjBV,YAAaD,EAAMC,UACnBE,WAAW,MALJ,2CAOR,O,sEAGL,sBAAAK,EAAA,sDACEH,KAAKO,aADP,gD,0EAIA,WACE,MAA8BP,KAAKL,MAA3BE,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACVU,EACJ,mCACE,sBAAKC,UAAU,sCAAf,UACE,cAAC,IAAD,CACEC,MAAO,wBACPX,KAAMC,KAAKL,MAAMI,KACjBY,GAAIX,KAAKL,MAAMC,UAAY,IAE7B,oBAAIa,UAAU,mBAAd,SAAkCZ,EAAOe,OACzC,qBAAIH,UAAU,YAAd,UACE,+BACE,sBAAMA,UAAU,YAAhB,uBACCZ,EAAOgB,WAEV,+BACE,sBAAMJ,UAAU,YAAhB,uBACCZ,EAAOiB,WAEV,+BACE,sBAAML,UAAU,YAAhB,uBACCZ,EAAOkB,cAGZ,wBACEN,UAAU,wFACVO,QAAShB,KAAKO,WAAWU,KAAKjB,MAFhC,uBASN,OAAO,mCAAGF,EAAY,cAAC,IAAD,IAAcU,Q,GAhEnBU,IAAMC,WAoE3B1B,EAAO2B,aAAe,CACpBxB,UAAW,GAcEH","file":"static/js/4.f4f74d58.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './Image';\nimport { loadPlanet } from '../services/sw-service';\nimport Loading from './Loading';\n\nclass Planet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialId: 1,\n      planet: {},\n      isLoading: true,\n      type: 'planet',\n    };\n  }\n\n  handleNext() {\n    this.setState(({ state }) => ({\n      isLoading: true,\n    }));\n\n    setTimeout(async () => {\n      let response = await loadPlanet(this.state.initialId);\n      this.setState(state => ({\n        planet: response.data,\n        initialId: ++state.initialId,\n        isLoading: false,\n      }));\n    }, 500);\n  }\n\n  async componentDidMount() {\n    this.handleNext();\n  }\n\n  render() {\n    const { planet, isLoading } = this.state;\n    const planetCard = (\n      <>\n        <div className=\"bg-gray-50 max-w-max m-0 rounded-lg\">\n          <Image\n            class={'max-w-sm rounded-t-lg'}\n            type={this.state.type}\n            id={this.state.initialId - 1}\n          />\n          <h3 className=\"ml-2 text-center\">{planet.name}</h3>\n          <ul className=\"ml-2 pb-2\">\n            <li>\n              <span className=\"font-bold\">Climate: </span>\n              {planet.climate}\n            </li>\n            <li>\n              <span className=\"font-bold\">Gravity: </span>\n              {planet.gravity}\n            </li>\n            <li>\n              <span className=\"font-bold\">Terrain: </span>\n              {planet.terrain}\n            </li>\n          </ul>\n          <button\n            className=\"w-full bg-green-100 py-1 px-4 rounded hover:bg-green-300 hover:bg-green-300 font-bold\"\n            onClick={this.handleNext.bind(this)}\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n    return <>{isLoading ? <Loading /> : planetCard}</>;\n  }\n}\n\nPlanet.defaultProps = {\n  initialId: 1,\n};\n\nPlanet.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    climate: PropTypes.string.isRequired,\n    gravity: PropTypes.string.isRequired,\n    src: PropTypes.string.isRequired,\n  }),\n  initialId: PropTypes.number.isRequired,\n  isLoading: PropTypes.bool,\n};\n\nexport default Planet;\n"],"sourceRoot":""}