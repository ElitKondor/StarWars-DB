{"version":3,"sources":["components/Starship.js"],"names":["Starship","props","state","initialId","starship","isLoading","type","this","handleClearMessages","setState","setTimeout","a","loadStarship","response","data","handleAddMessage","text","message","handleNext","starshipCard","className","class","id","name","manufacturer","passengers","starship_class","onClick","bind","React","Component","defaultProps"],"mappings":"2NAMMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,EACXC,SAAU,GACVC,WAAW,EACXC,KAAM,YANS,E,8CAUnB,WAAc,IAAD,OACXC,KAAKN,MAAMO,sBACXD,KAAKE,UAAS,cAAGP,MAAH,MAAgB,CAC5BG,WAAW,MAGbK,WAAU,sBAAC,4BAAAC,EAAA,+EAEcC,YAAa,EAAKV,MAAMC,WAFtC,OAEHU,EAFG,OAGP,EAAKJ,UAAS,SAAAP,GAAK,MAAK,CACtBE,SAAUS,EAASC,KACnBX,YAAaD,EAAMC,UACnBE,WAAW,MANN,gDASP,EAAKJ,MAAMc,iBAAiB,CAC1BT,KAAM,SACNU,KAAK,gBAAD,OAAkB,EAAKd,MAAMC,UAA7B,0CAAwE,KAAMc,WAEpF,EAAKR,UAAS,SAAAP,GAAK,MAAK,CACtBG,WAAW,EACXF,YAAaD,EAAMC,cAfd,yDAkBR,O,sEAGL,sBAAAQ,EAAA,sDACEJ,KAAKW,aADP,gD,0EAIA,WACE,MAAgCX,KAAKL,MAA7BE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UACZc,EACJ,mCACE,sBAAKC,UAAU,sCAAf,UACE,cAAC,IAAD,CACEC,MAAO,wBACPf,KAAMC,KAAKL,MAAMI,KACjBgB,GAAIf,KAAKL,MAAMC,UAAY,IAE7B,oBAAIiB,UAAU,mBAAd,SAAkChB,EAASmB,OAC3C,qBAAIH,UAAU,YAAd,UACE,+BACE,sBAAMA,UAAU,YAAhB,4BACChB,EAASoB,gBAEZ,+BACE,sBAAMJ,UAAU,YAAhB,0BAAgD,IAC/ChB,EAASqB,cAEZ,+BACE,sBAAML,UAAU,YAAhB,oBAA0C,IACzChB,EAASsB,qBAGd,wBACEN,UAAU,wFACVO,QAASpB,KAAKW,WAAWU,KAAKrB,MAFhC,uBASN,OAAO,mCAAGF,EAAY,cAAC,IAAD,IAAcc,Q,GA5EjBU,IAAMC,WAgF7B9B,EAAS+B,aAAe,CACtB5B,UAAW,GAcEH","file":"static/js/5.764f1769.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './Image';\nimport { loadStarship } from '../services/sw-service';\nimport Loading from './Loading';\n\nclass Starship extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialId: 2,\n      starship: {},\n      isLoading: true,\n      type: 'starship',\n    };\n  }\n\n  handleNext() {\n    this.props.handleClearMessages();\n    this.setState(({ state }) => ({\n      isLoading: true,\n    }));\n\n    setTimeout(async () => {\n      try {\n        let response = await loadStarship(this.state.initialId);\n        this.setState(state => ({\n          starship: response.data,\n          initialId: ++state.initialId,\n          isLoading: false,\n        }));\n      } catch (error) {\n        this.props.handleAddMessage({\n          type: 'danger',\n          text: `Item with ID[${this.state.initialId}] has been skipped. Because of ${error.message}`,\n        });\n        this.setState(state => ({\n          isLoading: false,\n          initialId: ++state.initialId,\n        }));\n      }\n    }, 500);\n  }\n\n  async componentDidMount() {\n    this.handleNext();\n  }\n\n  render() {\n    const { starship, isLoading } = this.state;\n    const starshipCard = (\n      <>\n        <div className=\"bg-gray-50 max-w-max m-0 rounded-lg\">\n          <Image\n            class={'max-w-sm rounded-t-lg'}\n            type={this.state.type}\n            id={this.state.initialId - 1}\n          />\n          <h3 className=\"ml-2 text-center\">{starship.name}</h3>\n          <ul className=\"ml-2 pb-2\">\n            <li>\n              <span className=\"font-bold\">Manufacturer: </span>\n              {starship.manufacturer}\n            </li>\n            <li>\n              <span className=\"font-bold\">Passengers: </span>{' '}\n              {starship.passengers}\n            </li>\n            <li>\n              <span className=\"font-bold\">Class:</span>{' '}\n              {starship.starship_class}\n            </li>\n          </ul>\n          <button\n            className=\"w-full bg-green-100 py-1 px-4 rounded hover:bg-green-300 hover:bg-green-300 font-bold\"\n            onClick={this.handleNext.bind(this)}\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n    return <>{isLoading ? <Loading /> : starshipCard}</>;\n  }\n}\n\nStarship.defaultProps = {\n  initialId: 1,\n};\n\nStarship.propTypes = {\n  starship: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    manufacturer: PropTypes.string.isRequired,\n    passengers: PropTypes.string.isRequired,\n    src: PropTypes.string.isRequired,\n  }),\n  initialId: PropTypes.number.isRequired,\n  isLoading: PropTypes.bool,\n};\n\nexport default Starship;\n"],"sourceRoot":""}